name: Deploy Backend to ACR and ACA in Release Env

on:
  push:
    branches:
      - release/**
    paths:
      - 'src/Demo.Pipeline.Backend/**'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout GitHub Action
        uses: actions/checkout@v4

      - name: Set release version
        id: release_version
        run: |
          VERSION=$(echo "${{ github.ref }}" | sed -E 's/^refs\/heads\/release\/(.*)$/\1/')
          echo "IMAGE_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Log in to Azure
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.AZ_BACKEND_ACR_LOGIN_SERVER }}
          username: ${{ secrets.AZ_BACKEND_ACR_USERNAME }}
          password: ${{ secrets.AZ_BACKEND_ACR_PASSWORD }}

      - name: Build and push image to ACR
        uses: docker/build-push-action@v2
        with:
          context: ./src/Demo.Pipeline.Backend
          file: ./src/Demo.Pipeline.Backend/DemoPipeline.Api/Dockerfile
          tags: ${{ secrets.AZ_BACKEND_ACR_LOGIN_SERVER }}/${{ secrets.AZ_BACKEND_ACR_NAME }}:${{ env.IMAGE_VERSION }}
          push: true

  create-container-app:
    needs: build-and-deploy
    runs-on: ubuntu-latest

    steps:
      - name: Set release version
        id: release_version
        run: |
          VERSION=$(echo "${{ github.ref }}" | sed -E 's/^refs\/heads\/release\/(.*)$/\1/')
          echo "IMAGE_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZ_SP_CREDENTIALS }}

      - name: Deploy image to ACA
        uses: azure/container-apps-deploy-action@v1
        with:
          acrName: ${{ secrets.AZ_BACKEND_ACR_NAME }}
          containerAppName: ${{ secrets.AZ_BACKEND_ACA_NAME }}
          resourceGroup: ${{ secrets.AZ_RG_NAME }}
          imageToDeploy: ${{ secrets.AZ_BACKEND_ACR_LOGIN_SERVER }}/${{ secrets.AZ_BACKEND_ACR_NAME }}:${{ env.IMAGE_VERSION }}